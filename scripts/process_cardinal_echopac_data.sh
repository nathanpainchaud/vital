#!/usr/bin/env bash

# NOTE: This script requires you to have already installed the `didactic` and `vital` packages in your python
# environment, as well as to have setup nnUNet to run inference according to the instructions detailed here:
# https://github.com/MIC-DKFZ/nnUNet#run-inference

DATA_ROOT=$1
OUTPUT_ROOT=$2

NIFTI_SUBDIR="$OUTPUT_ROOT"/cartesian_seq
NNUNET_INPUT_SUBDIR="$OUTPUT_ROOT"/nnUNet_input
NNUNET_MASKS_SUBDIR="$OUTPUT_ROOT"/nnUNet_masks
POST_MASKS_SUBDIR="$OUTPUT_ROOT"/temp_reg_masks
CYCLE_CLIP_LOG_SUBDIR="$OUTPUT_ROOT"/cycle_clipping_logs
FINAL_DATA_SUBDIR="$OUTPUT_ROOT"/data
IMG_PAIRS_SUBDIR="$OUTPUT_ROOT"/img_pairs

echo "Converting from polar GE format to cartesian image files"
cardinal-ge2nifti $(ls "$DATA_ROOT") "$NIFTI_SUBDIR"

echo "Reorganising files to the format expected by the nnUNet script (2 steps)"

echo "Step 1 of 2: Renaming files to add the '_0000' suffix"
shopt -s nullglob # Null string (instead of literal string of the expression) if no match found inside the directory
for file in "$NIFTI_SUBDIR"/*bmode.nii.gz
do
  file_wo_ext="${file%.nii.gz}"
  cp "$file" "${file_wo_ext}_0000.nii.gz"
done

echo "Step 2 of 2: Separating files in subdirectories for each view, to run a specialized nnUNet model for each view"
mkdir -p "$NNUNET_INPUT_SUBDIR"/{A4C,A2C,A3C}
for view in A4C A2C A3C
do
  mv "$NIFTI_SUBDIR"/*"$view"*_0000* "$NNUNET_INPUT_SUBDIR"/"$view"
done

echo "Running nnUNet in inference mode to predict segmentation masks for each view"
nnUNet_predict -i="$NNUNET_INPUT_SUBDIR"/A4C \
    -m=3d_fullres -t=Task138_Cardinal -f=0 \
    -o="$NNUNET_MASKS_SUBDIR"
nnUNet_predict -i="$NNUNET_INPUT_SUBDIR"/A2C \
    -m=3d_fullres -t=Task138_Cardinal -f=0 \
    -o="$NNUNET_MASKS_SUBDIR"
nnUNet_predict -i="$NNUNET_INPUT_SUBDIR"/A3C \
    -m=2d -t=Task133_AP3CH -f=0 \
    -o="$NNUNET_MASKS_SUBDIR"

echo "Renaming the masks generated by nnUNet so that they have a different tag than the input images"
find "$NNUNET_MASKS_SUBDIR" -name '*nii.gz' -exec bash -c 'mv $0 ${0/bmode/mask}' {} \;

echo "Processing the segmentation masks predicted by nnUNet to correct temporal inconsistencies"
# NOTE: For this script, most of the configuration is already specified in Hydra config files, with the main file
# for the experiment located in 'VITAL_ROOT/vital/config/experiment/cardinal-process_masks.yaml'.
# So you can either override the default config values here, or edit the config files directly.
cardinal-process-masks views.data_roots=["$NNUNET_MASKS_SUBDIR"] mask_tag=mask \
  postprocess_ops.temporal_regularization.autoencoder=nathanpainchaud/echo-arvae hydra.run.dir="$POST_MASKS_SUBDIR"

echo "Renaming the post-processed masks to keep their tag relatively short"
find "$POST_MASKS_SUBDIR" -name '*nii.gz' -exec bash -c 'mv $0 ${0/post_mask/mask}' {} \;

echo "Extracting the first full cardiac cycle from the segmentation masks"
cardinal-clip-cycle --data_roots "$NIFTI_SUBDIR" "$POST_MASKS_SUBDIR" \
  --mask_tag=mask --output_dir="$FINAL_DATA_SUBDIR" \
  --clip_frames_log="$CYCLE_CLIP_LOG_SUBDIR"/clip_frames.csv \
  --debug_peaks_plots_dir="$CYCLE_CLIP_LOG_SUBDIR"/peaks_plots

echo "Extracting pairs of first/second frames from the segmentation masks of the cardiac cycles"
cardinal-seq2pairs $(ls "$FINAL_DATA_SUBDIR") "$IMG_PAIRS_SUBDIR"
